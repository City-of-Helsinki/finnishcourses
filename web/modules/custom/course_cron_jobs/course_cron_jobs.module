<?php

use Drupal\course_services\CourseDataService;
use Drupal\user\Entity\User;

function _course_cron_jobs_unpublish_courses() {
  // // Login as user 1
  // $user = User::load(1);
  // user_login_finalize($user);

  $courseDataService = \Drupal::service('course_services.course_data_service');
  \Drupal::logger('course_cron_jobs')->notice('Course cron run');
  // Get all published courses
  $allPublishedCourses = $courseDataService->queryAllCourses(1);
  

  


  if (!$allPublishedCourses) {

   \Drupal::logger('course_cron_jobs')->notice('allPublishedCourses not defined');
    return;
  }

  _handle_published_courses($allPublishedCourses);
}

function _handle_published_courses($allPublishedCourses) {

  $courseDataService = \Drupal::service('course_services.course_data_service');
 

  foreach ($allPublishedCourses as $key => $course) {

    $courseUnpublishDate = $courseDataService->getFieldValue('field_course_unpublish_date', $course, 'valueInArray');
	
	$courseEndDate = $courseDataService->getFieldValue('field_course_end_date', $course, 'valueInArray');
	
	 if (!empty($courseEndDate)) {
		
	 $message = "Nid:" . $course . " course end date: " . $courseEndDate . "<br />";
	 //\Drupal::logger('course_cron_jobs')->notice($message);
	 
	 if ($course == 3083) {
		 
		$courseStartDate = $courseDataService->getFieldValue('field_course_start_date', $course, 'valueInArray');
	
		$courseOrganization = $courseDataService->getFieldValue('field_course_organization', $course, 'targetId');
		 
		$weekCycle = _get_week_cycle($courseOrganization);

		$compareDate = strtotime('-'.$weekCycle.' weeks');
		
		$message = "Course Nid: " . $course . ", ";
		$message .= "Course start date: " . strtotime($courseStartDate) . ", ";
		$message .= "Course compareDate date: " . $compareDate . ", ";
		
		if (!empty($courseUnpublishDate)) {
		
			$message .= "Course course unpublish Date: " . $courseUnpublishDate . " ";
		
		}
		
	    \Drupal::logger('course_cron_jobs')->notice($message);
		
	}

	
      if (strtotime($courseEndDate) < strtotime('now')) {
        $courseDataService->setNodeValue('published', 'FALSE', $course);
		
		$message = "Course unpublished. Nid:" . $course . " course end date: " . $courseEndDate . "<br />";
	    \Drupal::logger('course_cron_jobs')->notice($message);
      }
     // continue;
    }

    if (!empty($courseUnpublishDate)) {
		
	
      if (strtotime($courseUnpublishDate) < strtotime('now')) {
        $courseDataService->setNodeValue('published', 'FALSE', $course);
		
		$message = "Course unpublished. Nid:" . $course . " course unpublish date: " . $courseUnpublishDate . "<br />";
	    \Drupal::logger('course_cron_jobs')->notice($message);
      }
     // continue;
    }
	
	if (empty($courseUnpublishDate)) {

		$courseOrganization = $courseDataService->getFieldValue('field_course_organization', $course, 'targetId');

		if (!$courseOrganization) {
		  continue;
		}

		$weekCycle = _get_week_cycle($courseOrganization);

		$compareDate = strtotime('+'.$weekCycle.' weeks');

		$courseStartDate = $courseDataService->getFieldValue('field_course_start_date', $course, 'valueInArray');
		
		$courseStartDate = strtotime($courseStartDate);

		/* if (empty($courseStartDate)) {
		  continue;
		} */

		 if ($courseStartDate < $compareDate) {
		  $courseDataService->setNodeValue('published', 'FALSE', $course);
		  
		  $message = "Course unpublished. Nid:" . $course . " course compare date: " . $compareDate . "<br />";
		  \Drupal::logger('course_cron_jobs')->notice($message);
		} 
	}
  }
}

function _get_week_cycle($organization) {

  $courseDataService = \Drupal::service('course_services.course_data_service');

  $organizationWeekCycle = '';

  $organizationWeekCycle = $courseDataService->getTermsFieldValue('field_courses_unpublishing_cycle', $organization, 'valueInArray');

  if (empty($organizationWeekCycle)) {
    $organizationWeekCycle = '2';
  }

  return $organizationWeekCycle;
}